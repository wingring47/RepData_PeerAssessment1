myapp = oauth_app("twitter", key="yourConsumerKeyHere", secret="yourConsumerSecretHere")
sig = sign_oauth1.0(myapp, token = "yourTokenHere", token_secret = "yourTokenSecretHere")
homeTL = GET("https://api.twitter.com/1.1/statuses/home_timeline.json", sig)
json1 = content(homeTL)
json2 = jsonlite::fromJSON(toJSON(json1))
json2[1,1:4]
json1
myapp = oauth_app("twitter", key="yourConsumerKeyHere", secret="yourConsumerSecretHere")
sig = sign_oauth1.0(myapp, token = "yourTokenHere", token_secret = "yourTokenSecretHere")
homeTL = GET("https://api.twitter.com/1.1/statuses/home_timeline.json", sig)
json1=content(homeTL)
json2=jsonlite::fromJSON(toJSON(json1))
json2[1, 1:4]
json2
library(httr)
require(httpuv)
require(jsonlite)
auth_endpoints("github")
library(httr)
require(httpuv)
require(jsonlite)
oauth_endpoints("github")
myapp <- oauth_app("gitmining","6b7fdfb3d45cbddf4dde", "f2387665aaaef96b1e73443ca5d5a51ac8fc84b5")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
install.packages(httpuv)
install.packages("httpuv")
library(httr)
require(httpuv)
require(jsonlite)
auth_endpoints("github")
library(httr)
require(httpuv)
require(jsonlite)
oauth_endpoints("github")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
req <- GET("https://api.github.com/users/jtleek/repos", config(token = github_token))
stop_for_status(req)
output <- content(req)
list(output[[4]]$name, output[[4]]$created_at)
myapp <- oauth_app("gitmining","6b7fdfb3d45cbddf4dde", "f2387665aaaef96b1e73443ca5d5a51ac8fc84b5")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
req <- GET("https://api.github.com/users/jtleek/repos", config(token = github_token))
stop_for_status(req)
output <- content(req)
output
oauth_endpoints("github")
myapp <- oauth_app("gitmining","6b7fdfb3d45cbddf4dde", "f2387665aaaef96b1e73443ca5d5a51ac8fc84b5")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
req <- GET("https://api.github.com/users/jtleek/repos", config(token = github_token))
stop_for_status(req)
myapp <- oauth_app("gitmining","6b7fdfb3d45cbddf4dde", secret = "f2387665aaaef96b1e73443ca5d5a51ac8fc84b5")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
req <- GET("https://api.github.com/users/jtleek/repos", config(token = github_token))
stop_for_status(req)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
req <- GET("https://api.github.com/users/jtleek/repos", config(token = github_token))
output <- content(req)
list(output[[4]]$name, output[[4]]$created_at)
req <- GET("https://api.github.com/users/jtleek/repos", config(token = github_token))
output <- content(req)
list(output[[4]]$name, output[[4]]$created_at)
stop_for_status(req)
req <- GET("https://api.github.com/users/jtleek/repos", config(token = github_token))
stop_for_status(req)
myapp <- oauth_app("quiz2", "ddb0d599de51ccd02f4b", secret="6af1109f6ecf442d292425087d49bb13d9bbe9c8")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
req <- GET("https://api.github.com/users/jtleek/repos", config(token = github_token))
stop_for_status(req)
oauth_endpoints("github")
myapp <- oauth_app("quiz2", "ddb0d599de51ccd02f4b", secret="6af1109f6ecf442d292425087d49bb13d9bbe9c8")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
req <- GET("https://api.github.com/users/jtleek/repos", config(token = github_token))
stop_for_status(req)
myapp <- oauth_app("gitmining","6b7fdfb3d45cbddf4dde", secret = "f2387665aaaef96b1e73443ca5d5a51ac8fc84b5")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
req <- GET("https://api.github.com/users/jtleek/repos", config(token = github_token))
stop_for_status(req)
myapp <- oauth_app("Gitmining","6b7fdfb3d45cbddf4dde", secret = "f2387665aaaef96b1e73443ca5d5a51ac8fc84b5")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
myapp <- oauth_app("Gitmining","6b7fdfb3d45cbddf4dde", secret = "f2387665aaaef96b1e73443ca5d5a51ac8fc84b5")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
myapp <- oauth_app("Gitmining","6b7fdfb3d45cbddf4dde", secret = "f2387665aaaef96b1e73443ca5d5a51ac8fc84b5")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
library(httr)
require(httpuv)
require(jsonlite)
oauth_endpoints("github")
myapp <- oauth_app("Gitmining","6b7fdfb3d45cbddf4dde", secret = "f2387665aaaef96b1e73443ca5d5a51ac8fc84b5")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
myapp <- oauth_app("gitmining","6b7fdfb3d45cbddf4dde", secret = "f2387665aaaef96b1e73443ca5d5a51ac8fc84b5")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
getwd()
setwd(/Users/lurong/Desktop/coursera_DataScience)
setwd(/Users/lurong/Desktop/coursera_DataScience/)
setwd("/Users/lurong/Desktop/coursera_DataScience")
install.packages("sqldf")
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv"
f <- file.path(getwd(), "ss06pid.csv")
download.file(url, f)
acs <- data.table(read.csv(f))
read.csv(acs, [1, ])
read.csv(acs, nrow=1)
acs[1, ]
acs[, 1]
query1 <- sqldf("select pwgtp1 from acs where AGEP < 50")
library(sqldf)
query1 <- sqldf("select pwgtp1 from acs where AGEP < 50")
query1 <- sqldf("select pwgtp1 from acs where AGEP < 50")
query<- dbSendQuery(acs, "select pwgtp1 from acs where AGEP < 50")
acs$AGEP
gold <- unique(acs$AGEP)
query1 <- sqldf("select distinct AGEP from acs")
query2 <- sqldf("select AGEP where unique from acs")
query3 <- sqldf("select unique * from acs")
query4 <- sqldf("select unique AGEP from acs")
url <- "http://biostat.jhsph.edu/~jleek/contact.html"
html <- htmlTreeParse(url, useInternalNodes = T)
connection <- url("http://biostat.jhsph.edu/~jleek/contact.html")
htmlCode <- readLines(connection)
close(connection)
c(nchar(htmlCode[10]), nchar(htmlCode[20]), nchar(htmlCode[30]), nchar(htmlCode[100]))
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"
lines <- readLines(url, n=10)
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"
lines <- libcurl(url, n=10)
library(libcurl)
library("libcurl")
url <- "http://www.cpc.ncep.noaa.gov/data/indices/wksst8110.for"
lines <- readLines(url, n=10)
lines
lines <- readLines(url)
lines
data.frame(lines)
data<-data.frame(lines)
data[1,]
summary(data)
sum(data[,4])
w <- c(1, 9, 5, 4, 1, 3, 5, 4, 1, 3, 5, 4, 1, 3, 5, 4, 1, 3)
colNames <- c("filler", "week", "filler", "sstNino12", "filler", "sstaNino12", "filler", "sstNino3", "filler", "sstaNino3", "filler", "sstNino34", "filler", "sstaNino34", "filler", "sstNino4", "filler", "sstaNino4")
d <- read.fwf(url, w, header=FALSE, skip=4, col.names=colNames)
d <- d[, grep("^[^filler]", names(d))]
sum(d[, 4])
w <- c(1, 9, 5, 4, 1, 3, 5, 4, 1, 3, 5, 4, 1, 3, 5, 4, 1, 3)
colNames <- c("filler", "week", "filler", "sstNino12", "filler", "sstaNino12", "filler", "sstNino3", "filler", "sstaNino3", "filler", "sstNino34", "filler", "sstaNino34", "filler", "sstNino4", "filler", "sstaNino4")
d <- read.fwf(url, w, header=FALSE, skip=4, col.names=colNames)
d <- d[, grep("^[^filler]", names(d))]
sum(d[, 3])
w <- c(1, 9, 5, 4, 1, 3, 5, 4, 1, 3, 5, 4, 1, 3, 5, 4, 1, 3)
colNames <- c("filler", "week", "filler", "sstNino12", "filler", "sstaNino12", "filler", "sstNino3", "filler", "sstaNino3", "filler", "sstNino34", "filler", "sstaNino34", "filler", "sstNino4", "filler", "sstaNino4")
d <- read.fwf(url, w, header=FALSE, skip=4, col.names=colNames)
d <- d[, grep("^[^filler]", names(d))]
sum(d[, 5])
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
library(lattice)
library(datasets)
data(airquality)
p <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
library(lattice)
library(datasets)
data(airquality)
p <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
library(lattice)
library(datasets)
data(airquality)
p <- xyplot(Ozone ~ Wind)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
library(ggplot2)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
gzfile("https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip")
url <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
file.download(url)
file.downloaded(url)
gzfile(download.file(url))
gzfile
gzfile()
unzip(download.file(url))
unzip(download.file(url, destfile = "powerdata.zip"))
download.file(url, destfile = "powerdata.zip")
list*()
list()
dir()
unzip(power.data.zip)
unzip(powerdata.zip)
unzip("powerdata.zip")
dir()
data <- data.frame("household_power_consumption.txt")
data$DATE(nrow=10)
data$DATE[1,10]
data(head)
data
data <- read.table("household_power_consumption.txt", sep=";", header = T, na.string = "?")
data[1, 10]
data[1, ]
data$Datetime<- strptime(paste(data$Date, data$Time), "%d/%m/%Y %H:%M%S")
hist(data$Global_active_power, main = "Global Active Power", ylab = "Frequency",
xlab = "Global Active Power (kilowatts)", col = "red", breaks = 13, ylim = c(0,
1200), xlim = c(0, 6), xaxp = c(0, 6, 3))
plot(data$Datetime, data$Global_active_power, type = "l", xlab = "", ylab = "Global Active Power (kilowatts)")
read.table()
read.table
arg(read.table())
dir(read.table)
args(read.table())
args(read.table)
read.table("household_power_consumption.txt", colClasses = "Date")
read.table("household_power_consumption.txt", col.names = "Date")
dataFeb1 <- data[ which(data$Datime=='01/02/2007']
dataFeb1 <- data[ which(data$Datime=="01/02/2007"]
dataFeb1 <- data[ which(data$Datime=="01/02/2007")]
View(dataFeb1)
View(dataFeb1)
View(dataFeb1)
dataFeb1 <- data[ which(data$Date=="01/02/2007")]
data <- read.table("household_power_consumption.txt", sep=";", header = T, na.string = "?")
dataFeb1 <- data[ which(data$Date=="01/02/2007")]
dataFeb1
data$Date=="01/02/2007"
library(dplyr)
install.packages("dplyr")
library(dplyr)
datafeb <- filter(data, Date="01/02/2007", Date="02/02/2007")
data$Datetime<- strptime(paste(data$Date, data$Time), "%d/%m/%Y %H:%M%S")
dataFeb <- filter(data, DateTime >= as.Date("2007-02-01 00:00:00"), DateTime < as.Date("2007-02-03 00:00:00"))
data <- read.table("household_power_consumption.txt", sep=";", header = T, na.string = "?", nrow=10000)
data$DateTime <- as.Date(paste(data$Date, data$Time, format = "%d/%m/%Y %H:%M:%S"))
library(dplyr)
dataFeb <- filter(data, DateTime >= as.Date("2007-02-01 00:00:00"), DateTime < as.Date("2007-02-03 00:00:00"))
data <- read.table("household_power_consumption.txt", sep=";", header = T, na.string = "?")
data$DateTime <- as.Date(paste(data$Date, data$Time, format = "%d/%m/%Y %H:%M:%S"))
library(dplyr)
dataFeb <- filter(data, DateTime >= as.Date("2007-02-01 00:00:00"), DateTime < as.Date("2007-02-03 00:00:00"))
dataFeb
dataFeb <- filter(data, DateTime >= as.Date("01/02/2007 00:00:00"), DateTime < as.Date("03/02/2007 00:00:00"))
View(dataFeb)
View(dataFeb)
dataFeb <- filter(data, DateTime >= as.Date("01/02/2007 00:00:00") && DateTime < as.Date("03/02/2007 00:00:00"))
dataFeb <- filter(data, DateTime >= as.Date("01/02/2007 00:00:00") & DateTime < as.Date("03/02/2007 00:00:00"))
dataFeb <- filter(data, DateTime >= as.Date("1/2/2007 00:00:00") & DateTime < as.Date("3/2/2007 00:00:00"))
dataFeb <- filter(data, DateTime >= as.Date("2/1/2007 00:00:00") & DateTime < as.Date("2/3/2007 00:00:00"))
hist(dataFeb$Global_active_power, main = "Global Active Power", ylab = "Frequency",
xlab = "Global Active Power (kilowatts)", col = "red", breaks = 13,
ylim = c(0, 1200), xlim = c(0, 6), xaxp = c(0, 6, 3))
hist(dataFeb$Global_active_power, main = "Global Active Power", ylab = "Frequency",
xlab = "Global Active Power (kilowatts)", col = "red", breaks = 13,
ylim = c(0, 1400), xlim = c(0, 6), xaxp = c(0, 6, 3))
View(dataFeb)
dataorignial <- read.table("household_power_consumption.txt", sep=";", header = T, na.string = "?")
View(dataorignial)
View(dataorignial)
datafeb1 <- filter(dataorignial, dataorignial$Date=="1/2/2007")
datafeb1 <- filter(dataorignial, dataorignial$Date== as.Date("1/2/2007"))
datafeb1 <- filter(dataorignial, dataorignial$Date=as.Date("1/2/2007"))
datafeb1 <- filter(dataorignial, dataorignial$Date=="1/2/2007")
View(datafeb1)
datafeb1 <- filter(dataorignial, dataorignial$Date=="1/2/2007",dataorignial$Date=="2/2/2007" )
datafeb1 <- filter(dataorignial, dataorignial$Date==c("1/2/2007","2/2/2007"))
View(dataFeb)
View(dataorignial)
View(datafeb1)
datafeb <- filter(dataorignial, dataorignial$Date==c("1/2/2007","2/2/2007"))
hist(dataFeb$Global_active_power, main = "Global Active Power", ylab = "Frequency",
xlab = "Global Active Power (kilowatts)", col = "red", breaks = 13,
ylim = c(0, 1400), xlim = c(0, 6), xaxp = c(0, 6, 3))
hist(dataFeb$Global_active_power, main = "Global Active Power", ylab = "Frequency",
xlab = "Global Active Power (kilowatts)", col = "red", breaks = 13,
ylim = c(0, 1400), xlim = c(0, 6), xaxp = c(0, 6, 3))
hist(datafeb$Global_active_power, main = "Global Active Power", ylab = "Frequency",
xlab = "Global Active Power (kilowatts)", col = "red", breaks = 13,
ylim = c(0, 1400), xlim = c(0, 6), xaxp = c(0, 6, 3))
View(datafeb)
View(datafeb)
hist(datafeb$Global_active_power, main = "Global Active Power", ylab = "Frequency",
xlab = "Global Active Power (kilowatts)", col = "red", breaks = 13,
ylim = c(0, 1400), xlim = c(0, 6), xaxp = c(0, 7, 3))
hist(datafeb$Global_active_power, main = "Global Active Power", ylab = "Frequency",
xlab = "Global Active Power (kilowatts)", col = "red", breaks = 13,
ylim = c(0, 1400), xlim = c(0, 6), xaxp = c(0, 6, 3))
View(dataFeb)
datafeb$DateTime <- striptime(paste(datafeb$Date, datafeb$Time, format = "%d/%m/%Y %H:%M:%S"))
datafeb$DateTime <- strptime(paste(datafeb$Date, datafeb$Time, format = "%d/%m/%Y %H:%M:%S"))
datafeb$DateTime <- strptime(paste(datafeb$Date, datafeb$Time, "%d/%m/%Y %H:%M:%S"))
datafeb$DateTime <- strptime(paste(datafeb$Date, datafeb$Time), "%d/%m/%Y %H:%M:%S")
View(datafeb)
hist(datafeb$Global_active_power, main = "Global Active Power", ylab = "Frequency",
xlab = "Global Active Power (kilowatts)", col = "red", breaks = 13,
ylim = c(0, 1400), xlim = c(0, 6), xaxp = c(0, 6, 3))
args(hist)
plot(data$Datetime, data$Global_active_power, type = "l", xlab = "", ylab = "Global Active Power (kilowatts)")
plot(datafeb$Datetime, datafeb$Global_active_power, type = "l", xlab = "", ylab = "Global Active Power (kilowatts)")
plot(datafeb$DateTime, datafeb$Global_active_power, type = "l", xlab = "", ylab = "Global Active Power (kilowatts)")
View(dataorignial)
View(dataorignial)
plot(datafeb$Datetime, datafeb$Sub_metering_1, type = "l", ylab = "Energy sub metering",
xlab = "", col = "black")
points(datafeb$Datetime, datafeb$Sub_metering_2, type = "l", xlab = "", ylab = "Sub_metering_2",
col = "red")
points(datafeb$Datetime, datafeb$Sub_metering_3, type = "l", xlab = "", ylab = "Sub_metering_3",
col = "blue")
legend("topright", lty = 1, col = c("black", "red", "blue"), legend = c("Sub_metering_1",
"Sub_metering_2", "Sub_metering_3"), bty = "n", )
plot(datafeb$Datetime, datafeb$Sub_metering_1, type = "l", ylab = "Energy sub metering",
xlab = "", col = "black")
points(datafeb$Datetime, datafeb$Sub_metering_2, type = "l", xlab = "", ylab = "Sub_metering_2",
col = "red")
points(datafeb$Datetime, datafeb$Sub_metering_3, type = "l", xlab = "", ylab = "Sub_metering_3",
col = "blue")
legend("topright", lty = 1, col = c("black", "red", "blue"), legend = c("Sub_metering_1",
"Sub_metering_2", "Sub_metering_3"), bty = "n", )
plot(datafeb$Datetime, datafeb$Sub_metering_1, type = "l", ylab = "Energy sub metering",
xlab = "", col = "black")
points(datafeb$Datetime, datafeb$Sub_metering_2, type = "l", xlab = "", ylab = "Sub_metering_2",
col = "red")
points(datafeb$Datetime, datafeb$Sub_metering_3, type = "l", xlab = "", ylab = "Sub_metering_3",
col = "blue")
legend("topright", lty = 1, col = c("black", "red", "blue"), legend = c("Sub_metering_1",
"Sub_metering_2", "Sub_metering_3"), bty = "n", )
plot(datafeb$Datetime, datafeb$Sub_metering_1, type = "l", ylab = "Energy sub metering",
xlab = "", col = "black")
points(datafeb$Datetime, datafeb$Sub_metering_2, type = "l", xlab = "", ylab = "Sub_metering_2",
col = "red")
points(datafeb$Datetime, datafeb$Sub_metering_3, type = "l", xlab = "", ylab = "Sub_metering_3",
col = "blue")
legend("topright", lty = 1, col = c("black", "red", "blue"), legend = c("Sub_metering_1",
"Sub_metering_2", "Sub_metering_3"), bty = "n", )
points(datafeb$Datetime, datafeb$Sub_metering_2, type = "l", xlab = "", ylab = "Sub_metering_2",
col = "red")
plot(datafeb$DateTime, datafeb$Sub_metering_1, type = "l", ylab = "Energy sub metering",
xlab = "", col = "black")
points(datafeb$DaTetime, datafeb$Sub_metering_2, type = "l", xlab = "", ylab = "Sub_metering_2",
col = "red")
points(datafeb$DateTime, datafeb$Sub_metering_3, type = "l", xlab = "", ylab = "Sub_metering_3",
col = "blue")
legend("topright", lty = 1, col = c("black", "red", "blue"), legend = c("Sub_metering_1",
"Sub_metering_2", "Sub_metering_3"), bty = "n", )
plot(datafeb$DateTime, datafeb$Sub_metering_1, type = "l", ylab = "Energy sub metering",
xlab = "", col = "black")
points(datafeb$DateTime, datafeb$Sub_metering_2, type = "l", xlab = "", ylab = "Sub_metering_2",
col = "red")
points(datafeb$DateTime, datafeb$Sub_metering_3, type = "l", xlab = "", ylab = "Sub_metering_3",
col = "blue")
legend("topright", lty = 1, col = c("black", "red", "blue"), legend = c("Sub_metering_1",
"Sub_metering_2", "Sub_metering_3"), bty = "n", )
plot(datafeb$DateTime, datafeb$Global_reactive_power, type = "l", xlab = "datetime",
ylab = "Global_reactive_power", ylim = c(0, 0.5))
par(mfrow = c(2, 2))
# plot 1 (NW)
plot(datafeb$DateTime, datafeb$Global_active_power, type = "l", ylab = "Global Active Power",
xlab = "")
# plot 2 (NE)
plot(datafeb$DateTime, datafeb$Voltage, type = "l", ylab = "Voltage", xlab = "datetime")
# plot 3 (SW)
plot(datafeb$DateTime, datafeb$Sub_metering_1, type = "l", ylab = "Energy sub metering",
xlab = "", col = "black")
points(datafeb$DateTime, datafeb$Sub_metering_2, type = "l", xlab = "", ylab = "Sub_metering_2",
col = "red")
points(datafeb$DateTime, datafeb$Sub_metering_3, type = "l", xlab = "", ylab = "Sub_metering_3",
col = "blue")
legend("topright", lty = 1, col = c("black", "red", "blue"), legend = c("Sub_metering_1",
"Sub_metering_2", "Sub_metering_3"), bty = "n", )
# plot 4 (SE)
plot(datafeb$DateTime, datafeb$Global_reactive_power, type = "l", xlab = "datetime",
ylab = "Global_reactive_power", ylim = c(0, 0.5))
plot(datafeb$DateTime, datafeb$Sub_metering_1, type = "l", xlab = "", ylab = "Energy sub metering")
points(datafeb$DateTime, datafeb$Sub_metering_2, type = "l", xlab = "", ylab = "Energy sub metering",
col = "red")
points(datafeb$Datetime, datafeb$Sub_metering_3, type = "l", xlab = "", ylab = "Energy sub metering",
col = "blue")
legend("topright", lty = 1, col = c("black", "red", "blue"), legend = c("Sub_metering_1",
"Sub_metering_2", "Sub_metering_3"))
plot(datafeb$DateTime, datafeb$Sub_metering_1, type = "l", xlab = "", ylab = "Energy sub metering")
points(datafeb$DateTime, datafeb$Sub_metering_2, type = "l", xlab = "", ylab = "Energy sub metering",
col = "red")
points(datafeb$DateTime, datafeb$Sub_metering_3, type = "l", xlab = "", ylab = "Energy sub metering",
col = "blue")
legend("topright", lty = 1, col = c("black", "red", "blue"), legend = c("Sub_metering_1",
"Sub_metering_2", "Sub_metering_3"))
plot(datafeb$DateTime, datafeb$Sub_metering_1, type = "l", xlab = "", ylab = "Energy sub metering")
points(datafeb$DateTime, datafeb$Sub_metering_2, type = "l", xlab = "", ylab = "Energy sub metering",
col = "red")
points(datafeb$DateTime, datafeb$Sub_metering_3, type = "l", xlab = "", ylab = "Energy sub metering",
col = "blue")
legend("topright", lty = 1, col = c("black", "red", "blue"), legend = c("Sub_metering_1",
"Sub_metering_2", "Sub_metering_3"))
plot(datafeb$DateTime, datafeb$Global_active_power, type = "l", xlab = "",
ylab = "Global Active Power (kilowatts)")
hist(dataFeb$Global_active_power, main = "Global Active Power", ylab = "Frequency",
xlab = "Global Active Power (kilowatts)", col = "red", breaks = 13,
ylim = c(0, 1200), xlim = c(0, 6), xaxp = c(0, 6, 3))
plot(datafeb$DateTime, datafeb$Sub_metering_1, type = "l", xlab = "", ylab = "Energy sub metering")
points(datafeb$DateTime, datafeb$Sub_metering_2, type = "l", xlab = "", ylab = "Energy sub metering",
col = "red")
points(datafeb$DateTime, datafeb$Sub_metering_3, type = "l", xlab = "", ylab = "Energy sub metering",
col = "blue")
legend("topright", lty = 1, col = c("black", "red", "blue"), legend = c("Sub_metering_1",
"Sub_metering_2", "Sub_metering_3")
)
par(mfrow = c(2, 2))
# 1
plot(datafeb$DateTime, datafeb$Global_active_power, type = "l", ylab = "Global Active Power",
xlab = "")
# 2
plot(datafeb$DateTime, datafeb$Voltage, type = "l", ylab = "Voltage", xlab = "datetime")
# 3
plot(datafeb$DateTime, datafeb$Sub_metering_1, type = "l", ylab = "Energy sub metering",
xlab = "", col = "black")
points(datafeb$DateTime, datafeb$Sub_metering_2, type = "l", xlab = "", ylab = "Sub_metering_2",
col = "red")
points(datafeb$DateTime, datafeb$Sub_metering_3, type = "l", xlab = "", ylab = "Sub_metering_3",
col = "blue")
legend("topright", lty = 1, col = c("black", "red", "blue"),
legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), bty = "n", ))
# 4
plot(datafeb$DateTime, datafeb$Global_reactive_power, type = "l", xlab = "datetime",
ylab = "Global_reactive_power", ylim = c(0, 0.5))
par(mfrow = c(2, 2))
# 1
plot(datafeb$DateTime, datafeb$Global_active_power, type = "l", ylab = "Global Active Power",
xlab = "")
# 2
plot(datafeb$DateTime, datafeb$Voltage, type = "l", ylab = "Voltage", xlab = "datetime")
# 3
plot(datafeb$DateTime, datafeb$Sub_metering_1, type = "l", ylab = "Energy sub metering",
xlab = "", col = "black")
points(datafeb$DateTime, datafeb$Sub_metering_2, type = "l", xlab = "", ylab = "Sub_metering_2",
col = "red")
points(datafeb$DateTime, datafeb$Sub_metering_3, type = "l", xlab = "", ylab = "Sub_metering_3",
col = "blue")
legend("topright", lty = 1, col = c("black", "red", "blue"),
legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), bty = "n", )
# 4
plot(datafeb$DateTime, datafeb$Global_reactive_power, type = "l", xlab = "datetime",
ylab = "Global_reactive_power", ylim = c(0, 0.5))
data <- read.table("household_power_consumption.txt", sep=";", header = T, na.string = "?", nrow=100000)
library(dplyr)
datafeb <- filter(data, dataorignial$Date==c("1/2/2007","2/2/2007"))
datafeb$DateTime <- strptime(paste(datafeb$Date, datafeb$Time, format = "%d/%m/%Y %H:%M:%S"))
datafeb$DateTime <- strptime(paste(datafeb$Date, datafeb$Time), "%d/%m/%Y %H:%M:%S")
hist(datafeb$Global_active_power, main = "Global Active Power", ylab = "Frequency",
xlab = "Global Active Power (kilowatts)", col = "red", breaks = 13,
ylim = c(0, 1200), xlim = c(0, 6), xaxp = c(0, 6, 3))
hist(datafeb$Global_active_power, main = "Global Active Power", ylab = "Frequency",
xlab = "Global Active Power (kilowatts)", col = "red", breaks = 13,
ylim = c(0, 1200), xlim = c(0, 6), xaxp = c(0, 6, 3))
View(datafeb)
if (!file.exists("./data/household_power_consumption.txt")) {
download.file("http://j.mp/TbC79E", "./data/power_data.zip", method = "wget")
unzip("./data/power_data.zip", overwrite = T, exdir = "./data")
}
head -n 1 household_power_consumption.txt > feb2007data.txt
datafile <- "feb2007data.txt"
data <- read.table(datafile, sep = ";", header = T, na.strings = "?")
View(data)
View(data)
datafeb1 <- filter(dataorignial, dataorignial$Date=="1/2/2007")
datafeb2 <- filter(dataorignial, dataorignial$Date=="2/2/2007")
datafeb <- rbind(datafeb1, datafeb2)
hist(datafeb$Global_active_power, main = "Global Active Power", ylab = "Frequency",
xlab = "Global Active Power (kilowatts)", col = "red", breaks = 13,
ylim = c(0, 1200), xlim = c(0, 6), xaxp = c(0, 6, 3))
png()
png
url <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
download.file(url, destfile = "powerdata.zip")
.Library
(.packages())
url <- "http://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
download.file(url, destfile = "powerdata.zip")
getwd
getwd()
setwd("/Users/lurong/Desktop/coursera_DataScience/RepData_PeerAssessment1/doc/")
setwd("/Users/lurong/Desktop/coursera_DataScience/RepData_PeerAssessment1/")
unzip("activity.zip")
dir()
activitydata <- read.csv("activity.csv")
activitydata[1, ]
activitydata[1:3, ]
activitydata[1:30, ]
good <- complete.cases(activitydata)
cleandata <- activitydata[good]
cleandata <- activitydata[good, ]
cleandata[1:20, ]
summary(cleandata)
activitydata <- read.csv("activity.csv", na.rm=TRUE)
totalSteps <- aggregate(steps ~ date, data = cleandata, sum, na.rm = TRUE)
StepsbyDate <- aggregate(steps ~ date, data = cleandata, sum, na.rm = TRUE)
hist(StepsbyDate$steps)
View(activitydata)
View(cleandata)
View(totalSteps)
View(StepsbyDate)
hist(StepsbyDate$steps)
hist(StepsbyDate$steps)
args(hist)
hist(StepsbyDate)
hist(StepsbyDate$steps)
hist(StepsbyDate$date)
hist(StepsbyDate$steps)
plot(StepsbyDate$steps, StepsbyDate$date)
knit2html()
install.packages("knitr")
library(knitr)
knitr()
knitr2html()
knit2html()
q
q()
